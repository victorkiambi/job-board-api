openapi: 3.0.3
info:
  title: Job Board API
  version: 1.0.0
  description: RESTful API for a job board. Companies post jobs, job seekers apply.
servers:
  - url: http://localhost:8000/api/v1
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        user_type:
          type: string
        profile_data:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Company:
      type: object
      properties:
        id:
          type: integer
        company_name:
          type: string
        description:
          type: string
        website:
          type: string
        location:
          type: string
        logo_path:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    JobPosting:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        title:
          type: string
        description:
          type: string
        location:
          type: string
        salary_min:
          type: number
          format: float
        salary_max:
          type: number
          format: float
        job_type:
          type: string
          enum: [full_time, part_time, contract, internship]
        status:
          type: string
          enum: [active, inactive, filled]
        expires_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    JobApplication:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        job_posting_id:
          type: integer
        cover_letter:
          type: string
        resume_path:
          type: string
        additional_data:
          type: object
        status:
          type: string
        applied_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        message:
          type: string
paths:
  /register/job-seeker:
    post:
      summary: Register as a job seeker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, password_confirmation]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /register/company:
    post:
      summary: Register as a company
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, password_confirmation, company]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
                company:
                  type: object
                  required: [company_name]
                  properties:
                    company_name:
                      type: string
                    description:
                      type: string
                    website:
                      type: string
                    location:
                      type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      summary: Login (user or company)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logout:
    post:
      summary: Logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-postings:
    get:
      summary: List all job postings
      parameters:
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: job_type
          schema:
            type: string
        - in: query
          name: salary_min
          schema:
            type: number
        - in: query
          name: salary_max
          schema:
            type: number
      responses:
        '200':
          description: List of job postings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
    post:
      summary: Create a job posting (company only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [company_id, title, description, location, salary_min, salary_max, job_type]
              properties:
                company_id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                location:
                  type: string
                salary_min:
                  type: number
                  format: float
                salary_max:
                  type: number
                  format: float
                job_type:
                  type: string
                  enum: [full_time, part_time, contract, internship]
                status:
                  type: string
                  enum: [active, inactive, filled]
                expires_at:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-postings/{id}:
    get:
      summary: Get job posting details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Job posting details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update job posting (company only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                location:
                  type: string
                salary_min:
                  type: number
                salary_max:
                  type: number
                job_type:
                  type: string
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete job posting (company only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-applications:
    post:
      summary: Apply to a job (job seeker only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [job_posting_id]
              properties:
                job_posting_id:
                  type: integer
                cover_letter:
                  type: string
                resume_path:
                  type: string
                additional_data:
                  type: object
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /dashboard/company/applications:
    get:
      summary: Company dashboard - view all applications
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of job applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /dashboard/job-seeker/applications:
    get:
      summary: Job seeker dashboard - view own applications
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of job applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 